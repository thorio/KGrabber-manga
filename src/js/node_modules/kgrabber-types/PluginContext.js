/**
 * @typedef {import("kgrabber-types/Action")} Action
 * @typedef {import("kgrabber-types/Exporter")} Exporter
 * @typedef {import("kgrabber-types/Site")} Site
 */

module.exports = class PluginContext {
	/**
	 * @param {Object} obj function for adding new actions etc.
	 * @param {function(...Action):void} obj.addActionsFunc
	 * @param {function(...Site):void} obj.addSitesFunc
	 * @param {function(...Exporter):void} obj.addExportersFunc
	 * @param {function(Object):void} obj.addStepsFunc
	 * @param {Object} obj.ui
	 * @param {Object} obj.preferences
	 * @param {Object} obj.statusManager
	 */
	constructor({ addActionsFunc, addSitesFunc, addExportersFunc, addStepsFunc, ui, preferences, statusManager }) {
		this._addActionsFunc = addActionsFunc;
		this._addSitesFunc = addSitesFunc;
		this._addExportersFunc = addExportersFunc;
		this._addStepsFunc = addStepsFunc;
		this.ui = ui;
		this.preferences = preferences;
		this.statusManager = statusManager;
		Object.freeze(this);
	}

	/**
	 * Adds new Actions to the script
	 * @param {Action} actions
	 */
	addActions(...actions) {
		this._addActionsFunc(...actions);
	}

	/**
	 * Adds new Sites to the script
	 * @param {Site} sites
	 */
	addSites(...sites) {
		this._addSitesFunc(...sites);
	}

	/**
	 * Adds new Exporters to the script
	 * @param {Exporter} exporters
	 */
	addExporters(...exporters) {
		this._addExportersFunc(...exporters);
	}

	/**
	 * Adds new Steps to the script
	 * @param {Object} steps
	 */
	addSteps(steps) {
		this._addStepsFunc(steps);
	}
};
